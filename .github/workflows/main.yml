name: CI
on:
  push:
    branches: [ master, "v0.3.x" ]
  pull_request:
    branches: [ master, "v0.3.x" ]
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  Test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [stable, 1.63.0, beta, nightly, macos, windows]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: 1.63.0
            os: ubuntu-latest
            rust: 1.63.0
          - build: beta
            os: ubuntu-latest
            rust: beta
          - build: nightly
            os: ubuntu-latest
            rust: nightly
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable
    steps:
    - uses: actions/checkout@master
    - name: Install Rust (rustup)
      run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      shell: bash
    - name: Install cargo-hack
      uses: taiki-e/install-action@cargo-hack
    - name: Run tests
      run: cargo hack test --feature-powerset && cargo hack test --feature-powerset --release

  Rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - name: Check formatting
      run: cargo fmt --all -- --check

  Check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: ["aarch64-apple-ios", "aarch64-linux-android", "x86_64-apple-darwin", "x86_64-fuchsia", "x86_64-pc-windows-msvc", "x86_64-pc-solaris", "x86_64-unknown-illumos", "x86_64-unknown-linux-gnu", "x86_64-unknown-netbsd", "x86_64-unknown-redox"]
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: rustup update stable && rustup default stable
    - name: Install Target
      run: rustup target add ${{ matrix.target }}
    - name: Install cargo-hack
      uses: taiki-e/install-action@cargo-hack
    - name: Run check
      run: cargo hack check --feature-powerset --all-targets --examples --bins --tests --target ${{ matrix.target }}
